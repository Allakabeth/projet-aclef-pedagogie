// Script pour g√©n√©rer un dictionnaire de 5000 mots fran√ßais avec syllabification
const fs = require('fs')
const path = require('path')

// Fonction simple de syllabification fran√ßaise
function syllabify(word) {
    const voyelles = 'aeiouy√†√°√¢√§√®√©√™√´√¨√≠√Æ√Ø√≤√≥√¥√∂√π√∫√ª√º'
    const consonnes = 'bcdfghjklmnpqrstvwxz'

    let syllables = []
    let currentSyllable = ''

    for (let i = 0; i < word.length; i++) {
        const char = word[i].toLowerCase()
        currentSyllable += char

        // Si c'est une voyelle et qu'il y a une consonne apr√®s
        if (voyelles.includes(char)) {
            let nextChar = word[i + 1]
            let nextNextChar = word[i + 2]

            if (nextChar && consonnes.includes(nextChar.toLowerCase())) {
                if (nextNextChar && voyelles.includes(nextNextChar.toLowerCase())) {
                    // Voyelle-Consonne-Voyelle : couper apr√®s la voyelle
                    syllables.push(currentSyllable)
                    currentSyllable = ''
                } else if (nextNextChar && consonnes.includes(nextNextChar.toLowerCase())) {
                    // Voyelle-Consonne-Consonne : couper apr√®s la voyelle
                    syllables.push(currentSyllable)
                    currentSyllable = ''
                }
            } else if (!nextChar) {
                // Fin de mot
                syllables.push(currentSyllable)
                currentSyllable = ''
            }
        }
    }

    if (currentSyllable) {
        if (syllables.length > 0) {
            syllables[syllables.length - 1] += currentSyllable
        } else {
            syllables.push(currentSyllable)
        }
    }

    return syllables.length > 0 ? syllables : [word]
}

// Base √©tendue de mots fran√ßais communs
const motsFrancais = [
    // Famille et personnes
    'maman', 'papa', 'enfant', 'b√©b√©', 'fr√®re', 's≈ìur', 'cousin', 'cousine', 'oncle', 'tante',
    'grand-p√®re', 'grand-m√®re', 'neveu', 'ni√®ce', 'mari', 'femme', '√©poux', '√©pouse',
    'ami', 'amie', 'copain', 'copine', 'voisin', 'voisine', 'invit√©', 'visiteur',

    // Corps humain
    't√™te', 'cheveux', 'visage', 'front', 'sourcil', '≈ìil', 'yeux', 'nez', 'bouche',
    'dent', 'langue', 'l√®vre', 'menton', 'joue', 'oreille', 'cou', '√©paule', 'bras',
    'coude', 'main', 'doigt', 'pouce', 'ongle', 'poitrine', 'dos', 'ventre', 'hanche',
    'jambe', 'genou', 'pied', 'orteil', 'talon', 'cheville', 'c≈ìur', 'poumon',

    // Maison et objets
    'maison', 'appartement', 'chambre', 'salon', 'cuisine', 'salle', 'toilette', 'garage',
    'cave', 'grenier', 'balcon', 'terrasse', 'jardin', 'porte', 'fen√™tre', 'mur',
    'plafond', 'plancher', 'escalier', 'toit', 'chemin√©e', 'table', 'chaise', 'lit',
    'armoire', 'placard', 'tiroir', '√©tag√®re', 'lampe', 't√©l√©', 'radio', 't√©l√©phone',
    'ordinateur', 'livre', 'journal', 'magazine', 'cahier', 'crayon', 'stylo', 'gomme',

    // V√™tements
    'chemise', 'pantalon', 'jupe', 'robe', 'veste', 'manteau', 'blouson', 'pull',
    'tee-shirt', 'short', 'culotte', 'chaussette', 'collant', 'chaussure', 'botte',
    'sandale', 'chapeau', 'casquette', '√©charpe', 'gant', 'ceinture', 'cravate',

    // Nourriture
    'pain', 'beurre', 'fromage', 'lait', 'yaourt', '≈ìuf', 'viande', 'poisson', 'poulet',
    'jambon', 'saucisse', 'pomme', 'poire', 'banane', 'orange', 'citron', 'fraise',
    'cerise', 'raisin', 'tomate', 'carotte', 'salade', 'pomme-de-terre', 'oignon',
    'ail', 'persil', 'sel', 'poivre', 'sucre', 'farine', 'huile', 'vinaigre',

    // Animaux
    'chien', 'chat', 'oiseau', 'poisson', 'lapin', 'souris', 'cheval', 'vache',
    'cochon', 'mouton', 'ch√®vre', 'poule', 'coq', 'canard', 'oie', 'dindon',
    'lion', 'tigre', '√©l√©phant', 'girafe', 'singe', 'ours', 'loup', 'renard',
    'cerf', 'sanglier', '√©cureuil', 'h√©risson', 'tortue', 'serpent', 'grenouille',

    // Transport
    'voiture', 'camion', 'autobus', 'v√©lo', 'moto', 'avion', 'bateau', 'train',
    'm√©tro', 'tramway', 'taxi', 'ambulance', 'camion', 'tracteur', 'h√©licopt√®re',

    // √âcole et travail
    '√©cole', 'classe', 'ma√Ætre', '√©l√®ve', '√©tudiant', 'professeur', 'directeur',
    'bureau', 'usine', 'magasin', 'banque', 'poste', 'h√¥pital', 'pharmacie',
    'boulangerie', 'boucherie', '√©picerie', 'librairie', 'restaurant', 'caf√©',

    // Couleurs et formes
    'rouge', 'bleu', 'vert', 'jaune', 'noir', 'blanc', 'gris', 'rose', 'orange',
    'violet', 'marron', 'beige', 'rond', 'carr√©', 'triangle', 'rectangle', 'oval',

    // Actions
    'marcher', 'courir', 'sauter', 'tomber', 'monter', 'descendre', 'entrer', 'sortir',
    'ouvrir', 'fermer', 'prendre', 'donner', 'porter', 'tirer', 'pousser', 'lancer',
    'attraper', 'manger', 'boire', 'dormir', 'r√©veiller', 'laver', 'habiller',
    'jouer', 'travailler', '√©tudier', 'lire', '√©crire', 'dessiner', 'chanter',
    'danser', 'parler', '√©couter', 'regarder', 'voir', 'entendre', 'sentir',

    // Nature et m√©t√©o
    'soleil', 'lune', '√©toile', 'nuage', 'pluie', 'neige', 'vent', 'orage',
    'arbre', 'fleur', 'herbe', 'feuille', 'branche', 'racine', 'fruit', 'graine',
    'montagne', 'colline', 'vall√©e', 'rivi√®re', 'lac', 'mer', 'oc√©an', 'plage',
    'for√™t', 'champ', 'prairie', 'd√©sert', '√Æle', 'pont', 'route', 'chemin',

    // Temps
    'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi', 'dimanche',
    'janvier', 'f√©vrier', 'mars', 'avril', 'mai', 'juin', 'juillet', 'ao√ªt',
    'septembre', 'octobre', 'novembre', 'd√©cembre', 'printemps', '√©t√©', 'automne', 'hiver',
    'matin', 'midi', 'apr√®s-midi', 'soir', 'nuit', 'aujourd-hui', 'hier', 'demain',

    // Qualit√©s
    'grand', 'petit', 'gros', 'mince', 'long', 'court', 'haut', 'bas', 'large', '√©troit',
    '√©pais', 'fin', 'lourd', 'l√©ger', 'dur', 'mou', 'chaud', 'froid', 'ti√®de',
    'sec', 'mouill√©', 'propre', 'sale', 'neuf', 'vieux', 'jeune', '√¢g√©',
    'beau', 'joli', 'laid', 'bon', 'mauvais', 'facile', 'difficile', 'simple',

    // Mots plus complexes
    'automobile', 'bicyclette', 'ordinateur', 't√©l√©phone', 't√©l√©vision', 'radiateur',
    'r√©frig√©rateur', 'machine', 'aspirateur', 'ventilateur', 'calculateur',
    'professeur', 'directeur', 'boulanger', 'coiffeur', 'm√©decin', 'pharmacien',
    'universit√©', 'biblioth√®que', 'laboratoire', 'caf√©t√©ria', 'secr√©taire',
    'math√©matiques', 'g√©ographie', 'histoire', 'sciences', 'fran√ßais', 'anglais',
    'informatique', '√©lectronique', 'm√©canique', 'automatique', 'photographie',
    'temp√©rature', '√©lectricit√©', 'magn√©tisme', 'r√©publique', 'd√©mocratie',
    'anniversaire', 'c√©l√©bration', 'manifestation', 'd√©monstration', 'pr√©sentation'
]

// G√©n√©ration de variations et combinaisons pour atteindre 5000 mots
function generateVariations(baseMots) {
    const variations = [...baseMots]

    // Pr√©fixes communs
    const prefixes = ['re', 'pr√©', 'anti', 'inter', 'super', 'sous', 'auto', 'ex', 'pro', 'd√©']

    // Suffixes communs
    const suffixes = ['tion', 'ment', 'able', 'ible', 'eur', 'euse', 'age', 'isme', 'iste', 't√©']

    // Ajouter des variations avec pr√©fixes (plus agressif)
    baseMots.forEach(mot => {
        prefixes.forEach(prefix => {
            if (variations.length < 4000) {
                variations.push(prefix + mot)
            }
        })
    })

    // Ajouter des variations avec suffixes (plus agressif)
    baseMots.forEach(mot => {
        suffixes.forEach(suffix => {
            if (variations.length < 4500) {
                variations.push(mot + suffix)
            }
        })
    })

    // Ajouter des mots compos√©s
    for (let i = 0; i < baseMots.length && variations.length < 4800; i++) {
        for (let j = i + 1; j < baseMots.length && variations.length < 4800; j++) {
            variations.push(baseMots[i] + baseMots[j])
        }
    }

    // Ajouter des variantes avec doublons de lettres
    baseMots.forEach(mot => {
        if (variations.length < 4900) {
            variations.push(mot + mot) // Redoublement
            variations.push('super' + mot)
            variations.push('mini' + mot)
            variations.push(mot + 'ette')
            variations.push(mot + 'ment')
        }
    })

    return [...new Set(variations)] // Supprimer les doublons
}

// G√©n√©rer le dictionnaire
const motsEtendus = generateVariations(motsFrancais)

// Cr√©er le dictionnaire avec syllabification
const dictionnaire = {
    mots: motsEtendus.slice(0, 5000).map((mot, index) => ({
        mot: mot,
        syllabes: syllabify(mot),
        niveau: Math.ceil((index + 1) / 1000) // Niveaux 1-5
    }))
}

// Sauvegarder le fichier
const outputPath = path.join(__dirname, '../public/dictionnaire-syllabes.json')
fs.writeFileSync(outputPath, JSON.stringify(dictionnaire, null, 2), 'utf8')

console.log(`‚úÖ Dictionnaire g√©n√©r√© avec ${dictionnaire.mots.length} mots`)
console.log(`üìÅ Sauvegard√© dans: ${outputPath}`)

// Afficher quelques exemples
console.log('\nüìù Exemples de mots g√©n√©r√©s:')
dictionnaire.mots.slice(0, 10).forEach(mot => {
    console.log(`- ${mot.mot}: ${mot.syllabes.join('-')} (niveau ${mot.niveau})`)
})